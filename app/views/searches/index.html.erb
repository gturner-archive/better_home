<div class="container-fluid">
  <div class="row">
    <div class="col-lg-6">
      <div class="row">
        <div class="map-sidebar">
          <div id="map"></div>
        </div>
      </div>
    </div>
    <div class="col-lg-5">
      <div class="row vertical-align">
        <div class="col-lg-9 col-lg-offset-4">
          <div class="page-header text-center">
           <h2>Neighborhoods for you</h2>
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col-lg-11 col-lg-offset-3">
          <% @neighborhood_container[0..2].each_with_index do |result, index| %>
            <%= render partial: 'shared/top_three_result_panel', locals: { neighborhood: result, num: (index) } %>
          <% end %>
        </div>
      </div>
      <div class="row">
        <div class="col-lg-11 col-lg-offset-3">
          <% @neighborhood_container[3..-1].each do |result| %>
            <%= render partial: 'shared/result_panel', locals: { neighborhood: result } %>
          <% end %>
          <div class="text-center">
            <%= will_paginate @neighborhood_container %>
          </div>
        </div>
      </div>
    </div>
  </div>
<div class="col-md-9 col-md-offset-3">
  <script class= "col-md-9 col-md-offset-3">
    'use strict';
    function initMap() {
        // User's coordinates.
        var userCoords = <%= @coords.to_json.html_safe %>;
        var formattedUserCoords = {
          lat: parseFloat(userCoords.lat),
          lng: parseFloat(userCoords.lon)
        }

        // Neighborhood coordinates.
        var neighborhoodCoordinates = <%= @names_coordinates_json.html_safe %>
        var formattedCoordinates = neighborhoodCoordinates.map (function(obj) {
          return {name: obj.name, lat: parseFloat(obj.coords.lat), lng: parseFloat(obj.coords.lon)}
        })

        // Create and configure a map object.
        var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 12,
          center: formattedUserCoords,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        });

        // Making multiple markers.
        var infoWindow = new google.maps.InfoWindow();

        var markers = [];

        for(var i=0; i < formattedCoordinates.length; i++) {

          // Create a marker.
          var marker = new google.maps.Marker({
            position: formattedCoordinates[i],
            map: map,
            title: neighborhoodCoordinates[i].name
          });

          // Add on-click event for the marker.
          google.maps.event.addListener(marker, 'click', (function(marker, i) {
            return function() {
              infoWindow.setContent(marker.title);
              infoWindow.open(map, marker);
            }
          })(marker, i));

          markers.push(marker)

        }

        // Adding events to each card div.
        var cardImages = document.getElementsByClassName('img-fluid');
        console.log(cardImages);

        for(var i=0; i < cardImages.length; i++) {
          // Function to add an event to each card div.
          function divCardEvent() {
            // Need to give this inner anonymous function a copy
            // of i (as j) because, as a closure, it memorizes
            // the environment in which it is declared.
            (function(j) {
              // Find the marker whose title matches the card's id.
              var matchingMarker = markers.find(function(marker) {
                return marker.title == cardImages[j].id;
              });
              // The top 3 cards don't have a marker for some reason.
              if (matchingMarker) {
                cardImages[j].addEventListener('click', function() {
                  // Google Maps markers need this method call instead of
                  // marker.click().
                  google.maps.event.trigger(matchingMarker, 'click');
                });
              }
            })(i);
          }

          divCardEvent();
        }

        // Make the user's marker.
        var image = 'http://maps.google.com/mapfiles/kml/paddle/wht-stars.png'

        var userMarker = new google.maps.Marker({
          position: formattedUserCoords,
          map: map,
          title: 'User location',
          icon: image
        });

        google.maps.event.addListener(marker, 'click', (function(marker) {
          return function() {
            infoWindow.setContent(marker.title);
            infoWindow.open(map, marker);
          }
        })(userMarker));

        console.log(userMarker);
    }

    initMap();
  </script>
</div>
